-- PROCEDURE: public.CalculateLevel()

-- DROP PROCEDURE public."CalculateLevel"();

CREATE OR REPLACE PROCEDURE public."CalculateLevel"(
	)
LANGUAGE 'sql'
AS $BODY$
insert into "Level" ("type", "bidfrom", "bidto", "expired")
select  2, ((GREATEST(c2."minbid", c3."minbid") + GREATEST(c2."endbid", c3."startbid")) / 2), GREATEST(c2."endbid", c3."startbid"), (now() + (3 * interval '1 month'))
from "Candle" c1
join "Candle" c2 on c2."Id" = (c1."Id" + 1)
join "Candle" c3 on c3."Id" = (c2."Id" + 1)
join "Candle" c4 on c4."Id" = (c3."Id" + 1)
where c1."startbid" < c1."endbid" and c2."startbid" < c2."endbid"
	and c3."startbid" > c3."endbid" and c4."endbid" < c3."startbid"
	and (select count(*) from "Candle" where "startbid" > c2."endbid" and "endbid" > c2."endbid" and "startbid" > c3."endbid" and "endbid" > c3."endbid" and "Id" > c2."Id" and "Id" > c3."Id" ) < 6;

update "Level" set "deleted" = 1 where "active" = 1;
update "Level" set "active" = 1 where "deleted" = 0 and "active" = 0;

delete from "Level" where "Id" IN (
	select l1."Id" from "Level" l1
	join "Level" l2 on 1 = 1
	where l1."active" = 1 and l1."deleted" = 0 and l2."active" = 1 and l2."deleted" = 0 and l1."Id" != l2."Id"
	and ((l1."bidfrom" > l2."bidfrom") and l1."bidfrom" < (l2."bidto" + 15) or (l1."bidfrom" < l2."bidfrom" and (l1."bidto" + 15) > l2."bidfrom"))
	and l1."bidto" < l2."bidto"
);
$BODY$;
